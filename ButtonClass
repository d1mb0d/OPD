#pragma once

#include <SFML/Graphics.hpp>

class Button
{
	public:
		Button() {}

		Button(std::string t, sf::Vector2f size, int CharSize, sf::Color bgColor, sf::Color textColor)
		{
			text.setString(t);
			text.setFillColor(textColor);
			text.setCharacterSize(CharSize);
			button.setSize(size);
			button.setFillColor(bgColor);
		}

		void setFont(sf::Font& font)
		{
			text.setFont(font);
		}

		void setBackColor(sf::Color color)
		{
			button.setFillColor(color);
		}

		void setTextColor(sf::Color color)
		{
			text.setFillColor(color);
		}

		void setPosition(sf::Vector2f pos)
		{
			button.setPosition(pos);

			float xPos = (pos.x + button.getLocalBounds().width/3) - (text.getLocalBounds().width/3);
			float yPos = (pos.y + button.getLocalBounds().height / 3) - (text.getLocalBounds().height / 3);
			text.setPosition({ xPos, yPos });
		}

		void drawTo(sf::RenderWindow& window)
		{
			window.draw(button);
			window.draw(text);
		}

		bool isMouseOver(sf::RenderWindow& window)
		{
			float mouseX = sf::Mouse::getPosition(window).x;
			float mouseY = sf::Mouse::getPosition(window).y;

			float btnPosX = button.getPosition().x;
			float btnPosY = button.getPosition().y;

			float btnxPosWidth = button.getPosition().x + button.getLocalBounds().width;
			float btnyPosWidth = button.getPosition().y + button.getLocalBounds().height;

			if (mouseX < btnxPosWidth && mouseX > btnPosX && mouseY < btnyPosWidth && mouseY > btnPosY) return true;
			
			return false;
		}
		bool isButtonPressed(sf::RenderWindow& window)
		{
			if (isMouseOver(window)) if(sf::Mouse::isButtonPressed(sf::Mouse::Button::Left)) return true;
		}
		float getWidth()
		{
			return button.getSize().x;
		}

	private:
		sf::RectangleShape button;
		sf::Text text;
};
